!function(){"use strict";angular.module("movvizApp",["ngRoute","satellizer","ui.bootstrap"]).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0)}]).config(["$authProvider",function($authProvider){$authProvider.google({clientId:"386281142777-phvvje6cvtpai6b95bsqt48u3sp2av5s.apps.googleusercontent.com"})}])}(),function(){"use strict";function Account($http){return{getProfile:function(){return $http.get("/api/profile")}}}angular.module("movvizApp").factory("Account",Account),Account.$inject=["$http"]}(),function(){"use strict";function pagination(){return{restrict:"E",templateUrl:"/components/paginator/pagination.partial.html"}}angular.module("movvizApp").directive("pagination",pagination)}(),function(){"use strict";function paginatorFactory($location){return{create:function(urlBuilder,onClick){var paginator=new Paginator;return paginator["goto"]=function(page){return urlBuilder?$location.path(urlBuilder(page)):onClick&&onClick(page),!1},paginator}}}angular.module("movvizApp").factory("paginatorFactory",paginatorFactory),paginatorFactory.$inject=["$location"];var Paginator=function(){this.currentPage=0,this.totalPages=0,this.rangeSize=10};Paginator.prototype.prevPageDisabled=function(){return this.currentPage?"":"disabled"},Paginator.prototype.nextPageDisabled=function(){return this.currentPage===this.totalPages-1?"disabled":""},Paginator.prototype.range=function(){for(var ret=[],start=Math.max(0,Math.ceil(this.currentPage-this.rangeSize/2)),max=Math.min(this.totalPages,start+this.rangeSize),i=start;max>i;i++)ret.push(i);return ret}}(),function(){"use strict";function UploadDirective($parse){return{restrict:"E",templateUrl:"/components/upload/upload.partial.html",link:function($scope,element,attrs){var browseBtn=angular.element(element[0].getElementsByClassName("file")[0]),submitBtn=angular.element(element[0].getElementsByClassName("fileinput-upload-button"));submitBtn.css("display","none"),browseBtn.bind("change",function(){var file=browseBtn[0].files[0];if(file){attrs.progressModel&&$parse(attrs.progressModel).assign($scope,0),attrs.startedModel&&$parse(attrs.startedModel).assign($scope,!1);var fileCaptionDiv=element[0].getElementsByClassName("file-caption-name")[0];fileCaptionDiv&&(fileCaptionDiv.innerHTML=escape(file.name)),submitBtn.css("display","inline-block"),$scope.$apply(function(){$parse(attrs.fileModel).assign($scope,file)})}})}}}angular.module("movvizApp").directive("upload",UploadDirective),UploadDirective.$inject=["$parse"]}(),function(){"use strict";function stopEvent(){return{restrict:"A",link:function(scope,element,attr){element.bind(attr.stopEvent,function(e){e.stopPropagation()})}}}function disabledLink(){return{link:function(scope,element,attr){element.on("click",function(e){e.preventDefault()})}}}angular.module("movvizApp").directive("stopEvent",stopEvent).directive("disabledLink",disabledLink)}(),function(){"use strict";function encode(){return function(input,rfc3986){var encoded=encodeURIComponent(input);return rfc3986&&(encoded=encoded.replace(/[!'()*]/g,escape)),encoded}}function ucfirst(){return function(input){return input.charAt(0).toUpperCase()+input.slice(1)}}function ucword(){return function(input){for(var words=input.split(" "),nbWords=words.length,i=0;nbWords>i;i++)words[i]=ucfirst()(words[i]);return words.join(" ")}}angular.module("movvizApp").filter("encode",encode).filter("ucfirst",ucfirst).filter("ucword",ucword)}(),function(){"use strict";function CustomlistController($scope,$http,paginatorFactory){function changePage(page){page--;var apiUrl="/api/customlist/"+$scope.customlist.slug+"/"+page;$http.get(apiUrl).success(function(data,status,headers,config){$scope.paginator.currentPage=data.list.pagination.currentPage,$scope.paginator.totalPages=data.list.pagination.totalPages,$scope.customlist=data}).error(function(data,status,headers,config){console.log(error)})}$scope.paginator=paginatorFactory.create(null,changePage),$scope.paginator.rangeSize=5,$scope.paginator.currentPage=$scope.customlist.list.pagination.currentPage,$scope.paginator.totalPages=$scope.customlist.list.pagination.totalPages}angular.module("movvizApp").controller("CustomlistController",CustomlistController),CustomlistController.$inject=["$scope","$http","paginatorFactory"]}(),function(){"use strict";function CustomlistListController($scope,$http){$http.get("/api/customlists/results").success(function(data,status,headers,config){$scope.customlists=data}).error(function(data,status,headers,config){console.log("error")})}angular.module("movvizApp").controller("CustomlistListController",CustomlistListController),CustomlistListController.$inject=["$scope","$http"]}(),function(){"use strict";function ImportController($scope,$location,$auth,FileUpload){return $auth.isAuthenticated()?($scope.dynamic=0,$scope.submit=function(){var self=this;this.started=!0,FileUpload.upload({url:"api/import",file:this.csvFile}).progress(function(evt){self.dynamic=parseInt(100*evt.loaded/evt.total),console.log("progress "+self.dynamic+"%"+evt.config.file.name)}).success(function(data,status,headers,config){console.log("file "+config.file.name+"uploaded. Response "+data)})},void($scope.started=!1)):void $location.path("/")}angular.module("movvizApp").controller("ImportController",ImportController),ImportController.$inject=["$scope","$location","$auth","FileUpload"]}(),function(){"use strict";function LoginController($scope,$auth,Account){$auth.isAuthenticated()&&Account.getProfile().success(function(data){$scope.user=data}),$scope.authenticate=function(provider){$auth.authenticate(provider)},$scope.isAuthenticated=function(){return $auth.isAuthenticated()}}angular.module("movvizApp").controller("LoginController",LoginController),LoginController.$inject=["$scope","$auth","Account"]}(),function(){"use strict";function LogoutController($auth){$auth.isAuthenticated()&&$auth.logout()}angular.module("movvizApp").controller("LogoutController",LogoutController),LogoutController.$inject=["$auth"]}(),function(){"use strict";function MovieDetailController($scope,$http,$routeParams){$http.get("/api/movie/"+$routeParams.id).success(function(data,status,headers,config){$scope.movie=data}).error(function(data,status,headers,config){console.log("error")})}angular.module("movvizApp").controller("MovieDetailController",MovieDetailController),MovieDetailController.$inject=["$scope","$http","$routeParams"]}(),function(){"use strict";function MovieListController($scope,$http,$routeParams,$filter,paginatorFactory){var page=parseInt($routeParams.page,10);$scope.searchPattern=$routeParams.search,!$routeParams.search&&$routeParams.page&&(isNaN(page)||page%1)?(page=0,$scope.searchPattern=$routeParams.page):isNaN(page)||page%1?page=0:page--,$scope.paginator=paginatorFactory.create(function(page){page=page||1;var target="/movies/";return $scope.searchPattern&&(target+=$filter("encode")($scope.searchPattern,!0)+"/"),page&&(target+=page),target});var apiUrl=($scope.movies=[],"/api/movies/");$scope.searchPattern&&(apiUrl+=$filter("encode")($scope.searchPattern,!0)+"/"),apiUrl+=page,$http.get(apiUrl).success(function(data,status,headers,config){$scope.movies=data.movies,$scope.paginator.currentPage=data.pagination.currentPage,$scope.paginator.totalPages=data.pagination.totalPages}).error(function(data,status,headers,config){console.log("error")}),$scope.searchPattern&&($scope.searchPatternForm=$scope.searchPattern),$scope.search=function(){$scope.searchPattern=$scope.searchPatternForm,$scope.paginator["goto"]()},$scope.$on("$viewContentLoaded",function(){$("#movie-list .form > form").affix({offset:{top:0}})})}angular.module("movvizApp").controller("MovieListController",MovieListController),MovieListController.$inject=["$scope","$http","$routeParams","$filter","paginatorFactory"]}(),function(){"use strict";function NavController($scope,$location){$scope.isActive=function(navpath){var path=$location.path();return"/"===path?navpath===path:"/movies"!=path&&0!==path.indexOf("/movies/")&&0!==path.indexOf("/movie/")||"/movies"!=navpath?!1:!0}}angular.module("movvizApp").controller("NavController",NavController),NavController.$inject=["$scope","$location"]}(),function(){"use strict";function config($routeProvider){$routeProvider.when("/",{templateUrl:"customlistlist.partial.html",controller:"CustomlistListController"}).when("/logout",{template:null,controller:"LogoutController"}).when("/movies",{templateUrl:"movielist.partial.html",controller:"MovieListController"}).when("/movies/:page",{templateUrl:"movielist.partial.html",controller:"MovieListController"}).when("/movies/:search/:page",{templateUrl:"movielist.partial.html",controller:"MovieListController"}).when("/movie/:id?",{templateUrl:"moviedetail.partial.html",controller:"MovieDetailController"}).when("/import",{templateUrl:"import.partial.html",controller:"ImportController"}).otherwise({redirectTo:"/movies"})}angular.module("movvizApp").config(config),config.$inject=["$routeProvider"]}(),function(){"use strict";function FileUpload($http,$q,$timeout){function patchXHR(fnName,newFn){window.XMLHttpRequest.prototype[fnName]=newFn(window.XMLHttpRequest.prototype[fnName])}function sendHttp(config){config.method=config.method||"POST",config.headers=config.headers||{};var deferred=$q.defer(),promise=deferred.promise;return config.headers.__setXHR_=function(){return function(xhr){xhr&&(config.__XHR=xhr,config.xhrFn&&config.xhrFn(xhr),xhr.upload.addEventListener("progress",function(e){e.config=config,deferred.notify?deferred.notify(e):promise.progressFunc&&$timeout(function(){promise.progressFunc(e)})},!1),xhr.upload.addEventListener("load",function(e){e.lengthComputable&&(e.config=config,deferred.notify?deferred.notify(e):promise.progressFunc&&$timeout(function(){promise.progressFunc(e)}))},!1))}},$http(config).then(function(r){deferred.resolve(r)},function(e){deferred.reject(e)},function(n){deferred.notify(e)}),promise.success=function(fn){return promise.then(function(response){fn(response.data,response.status,response.headers,config)}),promise},promise.error=function(fn){return promise.then(null,function(response){fn(response.data,response.status,response.headers,config)}),promise},promise.progress=function(fn){return promise.progressFunc=fn,promise.then(null,null,function(update){fn(update)}),promise},promise.abort=function(){return config.__XHR&&$timeout(function(){config.__XHR.abort()}),promise},promise.xhr=function(fn){return config.xhrFn=function(originXhrFn){return function(){originXhrFn&&originXhrFn.apply(promise,arguments),fn.apply(promise,arguments)}}(config.xhrFn),promise},promise}window.XMLHttpRequest&&!window.XMLHttpRequest.__isFileAPISchim&&patchXHR("setRequestHeader",function(orig){return function(header,value){if("__setXHR_"===header){var val=value(this);val instanceof Function&&val(this)}else orig.apply(this,arguments)}}),this.upload=function(config){function addFieldToFormData(formData,val,key){if(void 0!==val)if(angular.isDate(val)&&val.toISOString(),angular.isString(val))formData.append(key,val);else if("form"===config.sendFieldsAs)if(angular.isObject(val))for(var k in val)val.hasOwnProperty(k)&&addFieldToFormData(formData,val[k],key+"["+k+"]");else formData.append(key,val);else val=angular.isString(val)?val:JSON.stringify(val),"json-blob"===config.sendFieldAs?formData.append(key,new Blob([val],{type:"application/json"})):formData.append(key,val)}return config.headers=config.headers||{},config.headers["Content-type"]=void 0,config.transformRequest=config.transformRequest?angular.isArray(config.transformRequest)?config.transformRequest:[config.transformRequest]:[],config.transformRequest.push(function(data){var key,formData=new FormData,allFields={};for(key in config.fields)config.fields.hasOwnProperty(key)&&(allFields[key]=config.fields[key]);data&&(allFields.data=data);for(key in allFields)if(allFields.hasOwnProperty(key)){var val=allFields[key];config.formDataAppender?config.formDataAppender(formData,key,val):addFieldToFormData(formData,val,key)}if(null!==config.file){var fileFormName=config.fileFormDataName||"file";if(angular.isArray(config.file))for(var isFileFormNameString=angular.isString(fileFormName),i=0;i<config.file.length;i++)formData.append(isFileFormNameString?fileFormName:fileFormName[i],config.file[i],config.fileName&&config.fileName[i]||config.file[i].name);else formData.append(fileFormName,config.file,config.fileName||config.file.name)}return formData}),sendHttp(config)},this.http=function(config){return config.transformRequest=config.transformRequest||function(data){return window.ArrayBuffer&&data instanceof window.ArrayBuffer||data instanceof Blob?data:$http.defaults.transformRequest[0](arguments)},sendHttp(config)}}angular.module("movvizApp").service("FileUpload",FileUpload),FileUpload.$inject=["$http","$q","$timeout"]}();
//# sourceMappingURL=movviz.min.js.map