!function(exports){"use strict";var movvizApp=angular.module("movvizApp",["ngRoute","movvizControllers"]);movvizApp.config(["$locationProvider","$routeProvider",function($locationProvider,$routeProvider){$locationProvider.html5Mode(!0),$routeProvider.when("/movies",{templateUrl:"partial/movie-list",controller:"MovvizListCtrl"}).when("/movies/:page",{templateUrl:"partial/movie-list",controller:"MovvizListCtrl"}).when("/movies/:search/:page",{templateUrl:"partial/movie-list",controller:"MovvizListCtrl"}).when("/movie/:id?",{templateUrl:"partial/movie-detail",controller:"MovvizDetailCtrl"}).otherwise({redirectTo:"/movies"})}]).directive("stopEvent",function(){return{restrict:"A",link:function(scope,element,attr){element.bind(attr.stopEvent,function(e){e.stopPropagation()})}}}).directive("disabledLink",function(){return{link:function(scope,element,attr){element.on("click",function(e){e.preventDefault()})}}}).directive("pagination",function(){return{restrict:"E",templateUrl:"partial/pagination"}}).factory("paginatorFactory",["$location",function($location){return{create:function(urlBuilder){var paginator=new Paginator(urlBuilder);return paginator["goto"]=function(page){return $location.path(urlBuilder(page)),!1},paginator}}}]);var Paginator=function(){this.currentPage=0,this.totalPages=0};Paginator.prototype.prevPageDisabled=function(){return this.currentPage?"":"disabled"},Paginator.prototype.nextPageDisabled=function(){return this.currentPage===this.totalPages-1?"disabled":""},Paginator.prototype.range=function(){for(var rangeSize=10,ret=[],start=Math.max(0,Math.ceil(this.currentPage-rangeSize/2)),max=Math.min(this.totalPages,start+rangeSize),i=start;max>i;i++)ret.push(i);return ret}}(window),function(exports){"use strict";var movvizControllers=angular.module("movvizControllers",[]);movvizControllers.controller("MovvizListCtrl",["$scope","$http","$routeParams","paginatorFactory",function($scope,$http,$routeParams,paginatorFactory){var page=parseInt($routeParams.page,10);$scope.searchPattern=$routeParams.search,!$routeParams.search&&$routeParams.page&&(isNaN(page)||page%1)?(page=0,$scope.searchPattern=$routeParams.page):isNaN(page)||page%1?page=0:page--,$scope.paginator=paginatorFactory.create(function(page){page=page||1;var target="/movies/";return $scope.searchPattern&&(target+=encodeURIComponent($scope.searchPattern)+"/"),page&&(target+=page+"/"),target});var apiUrl=($scope.movies=[],"/api/movies/");$scope.searchPattern&&(apiUrl+=encodeURIComponent($scope.searchPattern)+"/"),apiUrl+=page,$http.get(apiUrl).success(function(data,status,headers,config){$scope.movies=data.movies,$scope.paginator.currentPage=data.pagination.currentPage,$scope.paginator.totalPages=data.pagination.totalPages}).error(function(data,status,headers,config){console.log("error")}),$scope.searchPattern&&($scope.searchPatternForm=$scope.searchPattern),$scope.search=function(){$scope.searchPattern=$scope.searchPatternForm,$scope.paginator["goto"]()},$scope.$on("$viewContentLoaded",function(){$("#movie-list .form > form").affix({offset:{top:0}})})}]),movvizControllers.controller("MovvizDetailCtrl",["$scope","$http","$routeParams",function($scope,$http,$routeParams){$http.get("/api/movie/"+$routeParams.id).success(function(data,status,headers,config){$scope.movie=data}).error(function(data,status,headers,config){console.log("error")})}])}(window);
//# sourceMappingURL=movviz.min.js.map