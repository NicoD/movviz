!function(){"use strict";angular.module("movvizApp",["ngRoute"]).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0)}])}(),function(){"use strict";function config($routeProvider){$routeProvider.when("/movies",{templateUrl:"partial/movie-list",controller:"MovieListController"}).when("/movies/:page",{templateUrl:"partial/movie-list",controller:"MovieListController"}).when("/movies/:search/:page",{templateUrl:"partial/movie-list",controller:"MovieListController"}).when("/movie/:id?",{templateUrl:"partial/movie-detail",controller:"MovieDetailController"}).otherwise({redirectTo:"/movies"})}angular.module("movvizApp").config(config),config.$inject=["$routeProvider"]}(),function(){"use strict";function MovieListController($scope,$http,$routeParams,paginatorFactory){var page=parseInt($routeParams.page,10);$scope.searchPattern=$routeParams.search,!$routeParams.search&&$routeParams.page&&(isNaN(page)||page%1)?(page=0,$scope.searchPattern=$routeParams.page):isNaN(page)||page%1?page=0:page--,$scope.paginator=paginatorFactory.create(function(page){page=page||1;var target="/movies/";return $scope.searchPattern&&(target+=encodeURIComponent($scope.searchPattern)+"/"),page&&(target+=page+"/"),target});var apiUrl=($scope.movies=[],"/api/movies/");$scope.searchPattern&&(apiUrl+=encodeURIComponent($scope.searchPattern)+"/"),apiUrl+=page,$http.get(apiUrl).success(function(data,status,headers,config){$scope.movies=data.movies,$scope.paginator.currentPage=data.pagination.currentPage,$scope.paginator.totalPages=data.pagination.totalPages}).error(function(data,status,headers,config){console.log("error")}),$scope.searchPattern&&($scope.searchPatternForm=$scope.searchPattern),$scope.search=function(){$scope.searchPattern=$scope.searchPatternForm,$scope.paginator["goto"]()},$scope.$on("$viewContentLoaded",function(){$("#movie-list .form > form").affix({offset:{top:0}})})}angular.module("movvizApp").controller("MovieListController",MovieListController),MovieListController.$inject=["$scope","$http","$routeParams","paginatorFactory"]}(),function(){"use strict";function MovieDetailController($scope,$http,$routeParams){$http.get("/api/movie/"+$routeParams.id).success(function(data,status,headers,config){$scope.movie=data}).error(function(data,status,headers,config){console.log("error")})}angular.module("movvizApp").controller("MovieDetailController",MovieDetailController),MovieDetailController.$inject=["$scope","$http","$routeParams"]}(),function(){"use strict";function stopEvent(){return{restrict:"A",link:function(scope,element,attr){element.bind(attr.stopEvent,function(e){e.stopPropagation()})}}}function disabledLink(){return{link:function(scope,element,attr){element.on("click",function(e){e.preventDefault()})}}}angular.module("movvizApp").directive("stopEvent",stopEvent).directive("disabledLink",disabledLink)}(),function(){"use strict";function pagination(){return{restrict:"E",templateUrl:"partial/pagination"}}angular.module("movvizApp").directive("pagination",pagination)}(),function(){"use strict";function paginatorFactory($location){return{create:function(urlBuilder){var paginator=new Paginator(urlBuilder);return paginator["goto"]=function(page){return $location.path(urlBuilder(page)),!1},paginator}}}angular.module("movvizApp").factory("paginatorFactory",paginatorFactory),paginatorFactory.$inject=["$location"];var Paginator=function(){this.currentPage=0,this.totalPages=0};Paginator.prototype.prevPageDisabled=function(){return this.currentPage?"":"disabled"},Paginator.prototype.nextPageDisabled=function(){return this.currentPage===this.totalPages-1?"disabled":""},Paginator.prototype.range=function(){for(var rangeSize=10,ret=[],start=Math.max(0,Math.ceil(this.currentPage-rangeSize/2)),max=Math.min(this.totalPages,start+rangeSize),i=start;max>i;i++)ret.push(i);return ret}}();
//# sourceMappingURL=movviz.min.js.map